package io.pierre.tools;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

public class PropertyTools {
	
	public static Map<String, String> getMessage(String file){
		File file2 = new File(file);
		Map<String, String> map = new HashMap<String, String>();
		
		if (!file.equals("") ) {
			if (!file2.exists()) {
				try {    
					//createNewFile（）方法默认的权限是644
		            file2.createNewFile();
		            
		        } catch (IOException e) {    
		            e.printStackTrace();    
		        }    
			}
		}
		
		Properties properties = new Properties();
		
		try {
			//properties.load(Thread.currentThread().getContextClassLoader().getResourceAsStream(file));
			file2.setWritable(true);//设置可写权限
			file2.setExecutable(true);//设置可执行权限 
			file2.setReadable(true);//设置可读权限
			System.out.println(file2.canExecute());
			System.out.println(file2.canRead());
			System.out.println(file2.canWrite());
			System.out.println(file2.getAbsolutePath());
			properties.load(new FileReader(file2));
			map.put("appidNoCertificate", properties.getProperty("appidNoCertificate"));
			map.put("appidCertificate", properties.getProperty("appCertificate"));
			map.put("appCertificate", properties.getProperty("appidCertificate"));
			map.put("customerID", properties.getProperty("customerID"));
			map.put("customerCertificate", properties.getProperty("customerCertificate"));
			map.put("vendorID", properties.getProperty("vendorID"));
			map.put("cname", properties.getProperty("cname"));
			map.put("uid", properties.getProperty("uid"));
			
		} catch (IOException e) {
			e.printStackTrace();
		}
		return map;
	}
	
}
