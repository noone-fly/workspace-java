package io.pierre.rtcrestfulapi;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.Map;

import javax.xml.bind.DatatypeConverter;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.ParseException;
import org.apache.http.StatusLine;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;

public class RestfulAPITools {

	public static String[] kickoutSomebody(Map<String, String> map) throws ParseException, IOException {
		String[] str = null;
		HttpClient httpClient = HttpClients.createDefault();
		HttpPost httpPost = new HttpPost("https://api.agora.io/dev/v1/kicking-rule");

		String cusID = map.get("cusID");
		String cusCer = map.get("cusCer");
		String appid = map.get("appid");
		String cname = map.get("cname");
		String uid = map.get("uid");
		String ip = map.get("ip");
		String time = map.get("time");

		// username:password--->访问的用户名，密码,并使用base64进行加密，将加密的字节信息转化为string类型，encoding--->token

		String input = cusID + ":" + cusCer;
		String encoding = DatatypeConverter.printBase64Binary(input.getBytes("UTF-8"));

		String body = "{\"appid\":\"" + appid + "\"," + "\"cname\":\"" + cname + "\"," + "\"uid\":\"" + uid + "\","
				+ "\"ip\":\"" + ip + "\"," + "\"time\":\"" + time + "\"" + "}";

		httpPost.setHeader("Content-type", "application/json;charset=utf-8");
		httpPost.setHeader("Authorization", "Basic " + encoding);
		httpPost.setEntity(new StringEntity(body));

		HttpResponse response = httpClient.execute(httpPost);

		HttpEntity entity = response.getEntity();
		String content = EntityUtils.toString(entity, "utf-8");
		System.out.println(content);
		System.out.println(httpPost.getURI());
		System.out.println(response);
		str = new String[] {content,response.toString()};
		return str;
	}
	
	public static String[] QueryUserStatus(Map<String, String> map) throws ClientProtocolException, IOException {
		String[] str = null;
		String result = "";
		String cusId = map.get("cusId");
		String cusCer = map.get("cusCer");
		String appId = map.get("appId");
		String cname = map.get("cname");
		String uid = map.get("uid");

		String url = "https://api.agora.io/dev/v1/channel/user/property/" + appId + "/" + cname + "/" + uid;

		HttpClient httpclient = HttpClientBuilder.create().build();
		HttpGet httpget = new HttpGet(url);

		String inputencoding = cusId + ":" + cusCer;
		String encoding = DatatypeConverter.printBase64Binary(inputencoding.getBytes("UTF-8"));

		httpget.setHeader("Authorization", "Basic " + encoding);
		HttpResponse response = httpclient.execute(httpget);
		StatusLine statusLine = response.getStatusLine();
		int responseCode = statusLine.getStatusCode();

		System.out.println(responseCode);
		if (responseCode == 200) {
			HttpEntity entity = response.getEntity();
			InputStream input = entity.getContent();
			BufferedReader br = new BufferedReader(new InputStreamReader(input));
			String str1 = br.readLine();
			result = new String(str1.getBytes("gbk"), "utf-8");
			System.out.println("服务器的响应是:" + result);
			br.close();
			input.close();
		} else {
			System.out.println("响应失败!");
		}

		return result;
	}
}
